@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Cuprum:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Tenor+Sans&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap');

$body-bg: #f8fafc;
$font-size-base: 0.9rem;
$line-height-base: 1.6;

$dark: #1B1B1B;
$gray: #7A808C;
$light-gray: #C1C5CE;
$white: #FFFFFF;
$light: #C1C5CE;
//EBEBEB

$menu-toggle-color: $dark;
$menu-toggle-open-color: $dark;


$menu-item-font-size: 1.3em;
$menu-item-color: $dark;
//Color

$font-family-header: 'Lato', sans-serif;
$font-family-category-menu: 'Tenor Sans', sans-serif;

$font-family-search-input: 'Lato', sans-serif;

$font-family-slider-to-cart: 'Lato', sans-serif;

$font-family-footer-link-block-title: 'Lato', sans-serif;
$font-family-footer-link-block-link: 'Lato', sans-serif;

$instagram-background: #fafafa;

$box-shadow-1: 0px 4px 10px 0px #000000 11%;
$box-shadow-2: 0px 2px 10px rgba(0, 0, 0, 0.25);
$box-shadow-3: -10px 4px 115px rgba(0, 0, 0, 0.2);



$grid-breakpoints: ( xs: 0, xsm: 300px, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px);

/// Mixin to manage responsive breakpoints
/// @author Fulliton
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin media-breakpoint-down($breakpoint) {
  // If the key exists in the map
  @if map-has-key($grid-breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (max-width: map-get($grid-breakpoints, $breakpoint)) {
      @content;
    }
  }

    // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($grid-breakpoints)}.";
  }
}

@mixin media-breakpoint-up($breakpoint) {
  // If the key exists in the map
  @if map-has-key($grid-breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($grid-breakpoints, $breakpoint)) {
      @content;
    }
  }

    // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($grid-breakpoints)}.";
  }
}

.shadow-1 {
  box-shadow: $box-shadow-1;
}

.shadow-2 {
  box-shadow: $box-shadow-2;
}

.shadow-3 {
  box-shadow: $box-shadow-3;
}
